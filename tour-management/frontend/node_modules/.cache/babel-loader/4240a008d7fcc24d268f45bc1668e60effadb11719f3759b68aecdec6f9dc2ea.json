{"ast":null,"code":"// import { createContext, useEffect, useReducer } from \"react\";\n\n// const initial_state = {\n//   user: localStorage.getItem(\"user\")\n//     ? JSON.parse(localStorage.getItem(\"user\"))\n//     : null,\n//   loading: false,\n//   error: null,\n// };\n\n// export const AuthContext = createContext(initial_state);\n\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case \"LOGIN_START\":\n//       return {\n//         user: null,\n//         loading: true,\n//         error: null,\n//       };\n//     case \"LOGIN_SUCCESS\":\n//       return {\n//         user: action.payload,\n//         loading: false,\n//         error: null,\n//       };\n//     case \"LOGIN_FAILURE\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: action.payload,\n//       };\n//     case \"REGISTER_SUCCESS\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     case \"LOGOUT\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, initial_state);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"user\", JSON.stringify(state.user));\n//   }, [state.user]);\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         error: state.error,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };","map":{"version":3,"names":[],"sources":["/Users/angelagrozdanova/Downloads/MernStack-Tour-Management/tour-management/frontend/src/context/AuthContext.js"],"sourcesContent":["// import { createContext, useEffect, useReducer } from \"react\";\n\n// const initial_state = {\n//   user: localStorage.getItem(\"user\")\n//     ? JSON.parse(localStorage.getItem(\"user\"))\n//     : null,\n//   loading: false,\n//   error: null,\n// };\n\n// export const AuthContext = createContext(initial_state);\n\n// const AuthReducer = (state, action) => {\n//   switch (action.type) {\n//     case \"LOGIN_START\":\n//       return {\n//         user: null,\n//         loading: true,\n//         error: null,\n//       };\n//     case \"LOGIN_SUCCESS\":\n//       return {\n//         user: action.payload,\n//         loading: false,\n//         error: null,\n//       };\n//     case \"LOGIN_FAILURE\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: action.payload,\n//       };\n//     case \"REGISTER_SUCCESS\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n//     case \"LOGOUT\":\n//       return {\n//         user: null,\n//         loading: false,\n//         error: null,\n//       };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export const AuthContextProvider = ({ children }) => {\n//   const [state, dispatch] = useReducer(AuthReducer, initial_state);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"user\", JSON.stringify(state.user));\n//   }, [state.user]);\n\n//   return (\n//     <AuthContext.Provider\n//       value={{\n//         user: state.user,\n//         loading: state.loading,\n//         error: state.error,\n//         dispatch,\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}